{"remainingRequest":"/Users/itoukazunari/Desktop/Vue.js/my-trello/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/itoukazunari/Desktop/Vue.js/my-trello/src/components/Board.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/itoukazunari/Desktop/Vue.js/my-trello/src/components/Board.vue","mtime":1599645456782},{"path":"/Users/itoukazunari/Desktop/Vue.js/my-trello/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/itoukazunari/Desktop/Vue.js/my-trello/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/itoukazunari/Desktop/Vue.js/my-trello/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/itoukazunari/Desktop/Vue.js/my-trello/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkcmFnZ2FibGUgZnJvbSAndnVlZHJhZ2dhYmxlJwppbXBvcnQgTGlzdEFkZCBmcm9tICcuL0xpc3RBZGQnCi8vIOKYheOBk+OBk+OBi+OCiei/veiomAppbXBvcnQgTGlzdCBmcm9tICcuL0xpc3QnCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCcKLy8g4piF44GT44GT44G+44Gn6L+96KiYCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTGlzdEFkZCwKICAgIC8vIOKYhei/veiomAogICAgTGlzdCwKICAgIGRyYWdnYWJsZQogIH0sCiAgLy8g4piF6L+96KiYCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKFsKICAgICAgJ2xpc3RzJwogICAgXSksCiAgICB0b3RhbENhcmRDb3VudCgpewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy50b3RhbENhcmRDb3VudAogICAgfQogIH0sCiAgbWV0aG9kczogewogIG1vdmluZ0NhcmQ6IGZ1bmN0aW9uKCkgewogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3VwZGF0ZUxpc3QnLCB7IGxpc3RzOiB0aGlzLmxpc3RzIH0pCiAgfSwKfQp9Cg=="},{"version":3,"sources":["Board.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Board.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n  <header>\n    my Trello\n  </header>\n  <main>\n    <p class=\"info-line\">All: {{totalCardCount}}tasks</p>\n          <div class=\"list-index\">\n          <draggable >\n            <List v-for=\"(item, index) in lists\"\n              :key=\"item.id\"\n              :title=\"item.title\"\n              :cards = \"item.cards\"\n              :listIndex=\"index\"\n               @change=\"movingCard\"\n        ></List>\n        <ListAdd></ListAdd>\n          </draggable>\n      </div>\n  </main>\n</div>\n</template>\n\n<script>\nimport draggable from 'vuedraggable'\nimport ListAdd from './ListAdd'\n// ★ここから追記\nimport List from './List'\nimport { mapState } from 'vuex'\n// ★ここまで追記\n\nexport default {\n  components: {\n    ListAdd,\n    // ★追記\n    List,\n    draggable\n  },\n  // ★追記\n  computed: {\n    ...mapState([\n      'lists'\n    ]),\n    totalCardCount(){\n      return this.$store.getters.totalCardCount\n    }\n  },\n  methods: {\n  movingCard: function() {\n    this.$store.dispatch('updateList', { lists: this.lists })\n  },\n}\n}\n</script>"]}]}