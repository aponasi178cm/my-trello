{"remainingRequest":"/Users/itoukazunari/Desktop/Vue.js/my-trello/node_modules/babel-loader/lib/index.js!/Users/itoukazunari/Desktop/Vue.js/my-trello/node_modules/eslint-loader/index.js??ref--13-0!/Users/itoukazunari/Desktop/Vue.js/my-trello/src/store/index.js","dependencies":[{"path":"/Users/itoukazunari/Desktop/Vue.js/my-trello/src/store/index.js","mtime":1599637498502},{"path":"/Users/itoukazunari/Desktop/Vue.js/my-trello/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/itoukazunari/Desktop/Vue.js/my-trello/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/itoukazunari/Desktop/Vue.js/my-trello/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKVnVlLnVzZShWdWV4KTsKdmFyIHNhdmVkTGlzdHMgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndHJlbGxvLWxpc3RzJyk7CnZhciBzdG9yZSA9IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgbGlzdHM6IHNhdmVkTGlzdHMgPyBKU09OLnBhcnNlKHNhdmVkTGlzdHMpIDogW3sKICAgICAgdGl0bGU6ICdCYWNrbG9nJywKICAgICAgY2FyZHM6IFt7CiAgICAgICAgYm9keTogJ0VuZ2xpc2gnCiAgICAgIH0sIHsKICAgICAgICBib2R5OiAnTWF0aGVtYXRpY3MnCiAgICAgIH1dCiAgICB9LCB7CiAgICAgIHRpdGxlOiAnVG9kbycsCiAgICAgIGNhcmRzOiBbewogICAgICAgIGJvZHk6ICdTY2llbmNlJwogICAgICB9XQogICAgfSwgewogICAgICB0aXRsZTogJ0RvaW5nJywKICAgICAgY2FyZHM6IFtdCiAgICB9XQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBhZGRsaXN0OiBmdW5jdGlvbiBhZGRsaXN0KHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLmxpc3RzLnB1c2goewogICAgICAgIHRpdGxlOiBwYXlsb2FkLnRpdGxlLAogICAgICAgIGNhcmRzOiBbXQogICAgICB9KTsKICAgIH0sCiAgICByZW1vdmVsaXN0OiBmdW5jdGlvbiByZW1vdmVsaXN0KHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLmxpc3RzLnNwbGljZShwYXlsb2FkLmxpc3RJbmRleCwgMSk7CiAgICB9LAogICAgYWRkQ2FyZFRvTGlzdDogZnVuY3Rpb24gYWRkQ2FyZFRvTGlzdChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5saXN0c1twYXlsb2FkLmxpc3RJbmRleF0uY2FyZHMucHVzaCh7CiAgICAgICAgYm9keTogcGF5bG9hZC5ib2R5CiAgICAgIH0pOwogICAgfSwKICAgIHJlbW92ZUNhcmRGcm9tTGlzdDogZnVuY3Rpb24gcmVtb3ZlQ2FyZEZyb21MaXN0KHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLmxpc3RzW3BheWxvYWQubGlzdEluZGV4XS5jYXJkcy5zcGxpY2UocGF5bG9hZC5jYXJkSW5kZXgsIDEpOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgYWRkbGlzdDogZnVuY3Rpb24gYWRkbGlzdChjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIGNvbnRleHQuY29tbWl0KCdhZGRsaXN0JywgcGF5bG9hZCk7CiAgICB9LAogICAgcmVtb3ZlbGlzdDogZnVuY3Rpb24gcmVtb3ZlbGlzdChjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIGNvbnRleHQuY29tbWl0KCdyZW1vdmVsaXN0JywgcGF5bG9hZCk7CiAgICB9LAogICAgYWRkQ2FyZFRvTGlzdDogZnVuY3Rpb24gYWRkQ2FyZFRvTGlzdChjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIGNvbnRleHQuY29tbWl0KCdhZGRDYXJkVG9MaXN0JywgcGF5bG9hZCk7CiAgICB9LAogICAgcmVtb3ZlQ2FyZEZyb21MaXN0OiBmdW5jdGlvbiByZW1vdmVDYXJkRnJvbUxpc3QoY29udGV4dCwgcGF5bG9hZCkgewogICAgICBjb250ZXh0LmNvbW1pdCgncmVtb3ZlQ2FyZEZyb21MaXN0JywgcGF5bG9hZCk7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7Ly8g44Oq44K544OI44Gu57eP5pWw44KS5Y+W5b6X44GZ44KL5Yem55CG44KS5a6f6KOFCiAgfQp9KTsKc3RvcmUuc3Vic2NyaWJlKGZ1bmN0aW9uIChtdXRhdGlvbiwgc3RhdGUpIHsKICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndHJlbGxvLWxpc3RzJywgSlNPTi5zdHJpbmdpZnkoc3RhdGUubGlzdHMpKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHN0b3JlOw=="},{"version":3,"sources":["/Users/itoukazunari/Desktop/Vue.js/my-trello/src/store/index.js"],"names":["Vue","Vuex","use","savedLists","localStorage","getItem","store","Store","state","lists","JSON","parse","title","cards","body","mutations","addlist","payload","push","removelist","splice","listIndex","addCardToList","removeCardFromList","cardIndex","actions","context","commit","getters","subscribe","mutation","setItem","stringify"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nconst savedLists = localStorage.getItem('trello-lists')\n\nconst store =  new Vuex.Store({\n  state: {\n    lists: savedLists ? JSON.parse(savedLists): [\n      {\n        title: 'Backlog',\n        cards: [\n          { body: 'English' },\n          { body: 'Mathematics' },\n        ]\n      },\n      {\n        title: 'Todo',\n        cards: [\n          { body: 'Science' }\n        ]\n      },\n      {\n        title: 'Doing',\n        cards: []\n      }\n    ],\n  },\n  mutations: {\n    addlist(state, payload) {\n      state.lists.push({ title: payload.title, cards:[] })\n    },\n    removelist(state, payload) {\n      state.lists.splice(payload.listIndex, 1)\n    },\n    addCardToList(state, payload) {\n      state.lists[payload.listIndex].cards.push({ body: payload.body })\n    },\n    removeCardFromList(state, payload) {\n      state.lists[payload.listIndex].cards.splice(payload.cardIndex, 1)\n    },\n  },\n  actions: {\n    addlist(context, payload) {\n      context.commit('addlist', payload)\n    },\n    removelist(context, payload) {\n      context.commit('removelist', payload)\n    },\n    addCardToList(context, payload) {\n      context.commit('addCardToList', payload)\n    },\n    removeCardFromList(context, payload){\n      context.commit('removeCardFromList', payload)\n    }\n  },\n  getters: {\n    // リストの総数を取得する処理を実装\n    \n  },\n})\n\nstore.subscribe((mutation, state) => {\n  localStorage.setItem('trello-lists', JSON.stringify(state.lists))\n})\n\nexport default store"]}]}